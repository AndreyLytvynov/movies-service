{"version":3,"file":"static/js/78.94f50fed.chunk.js","mappings":"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","sources":["hooks/toast.js","componets/auth/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import { useToast } from \"@chakra-ui/react\";\n\nconst Toast = () => {\n  const toast = useToast();\n\n  const addToast = ({ type, message }) => {\n    toast({\n      description: message,\n      status: type,\n      duration: 5000,\n      position: \"bottom\",\n      isClosable: true,\n      color: \"green\",\n    });\n  };\n\n  return { addToast };\n};\n\nexport default Toast;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useLoginUserMutation } from \"../../redux/users/userApiSlice\";\nimport { login } from \"../../redux/users/userSice\";\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  Heading,\n  IconButton,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Stack,\n  Text,\n} from \"@chakra-ui/react\";\nimport { BiShow, BiHide } from \"react-icons/bi\";\nimport { Link, NavLink, useNavigate } from \"react-router-dom\";\nimport Toast from \"../../hooks/toast\";\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .trim()\n    .email(\"Email must be in format: email@domain.com\")\n    .min(6, \"Minimal email length is 6 symbols\")\n    .max(32, \"Max email length is 32 symbols\")\n    .required(\"Email is required\"),\n  password: yup\n    .string()\n    .trim()\n    .min(7, \"Minimal password length is 8 symbols\")\n    .max(32, \"Max password length is 32 symbols\")\n    .required(\"Password is required\"),\n});\n\nconst LoginForm = () => {\n  const [show, setShow] = useState(false);\n  const dispatch = useDispatch();\n  const [loginUser, { isLoading }] = useLoginUserMutation();\n  const navigate = useNavigate();\n  const handleClick = () => setShow(!show);\n  const { addToast } = Toast();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = async (data) => {\n    try {\n      const { data: res, error } = await loginUser(data);\n\n      if (error) {\n        return addToast({ message: error.data.status, type: \"error\" });\n      }\n      addToast({ message: res.status, type: \"success\" });\n\n      dispatch(login(res));\n      reset();\n      navigate(\"/popular\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <Flex\n      maxW={\"608px\"}\n      width={\"100%\"}\n      bg={\"white\"}\n      boxShadow={\"secondShadow\"}\n      borderRadius={\"40px\"}\n      padding={\"60px 80px\"}\n      flexDirection={\"column\"}\n    >\n      <Heading\n        variant={\"authForm\"}\n        mx={\"auto\"}\n        mb={\"40px\"}\n        color={\"blackAlpha.900\"}\n      >\n        Login\n      </Heading>\n      <Stack gap={\"16px\"} w=\"100%\" as=\"form\" onSubmit={handleSubmit(onSubmit)}>\n        <FormControl isInvalid={errors.email} position=\"relative\">\n          <Input\n            variant={\"login\"}\n            placeholder={\"Email\"}\n            {...register(\"email\")}\n          />\n          <FormErrorMessage position=\"absolute\" bottom=\"-20px\">\n            {errors?.email?.message}\n          </FormErrorMessage>\n        </FormControl>\n        <FormControl isInvalid={errors.password} position=\"relative\">\n          <InputGroup>\n            <Input\n              variant={\"login\"}\n              placeholder={\"Password\"}\n              type={show ? \"text\" : \"password\"}\n              {...register(\"password\")}\n            />\n            <InputRightElement>\n              <IconButton\n                variant={\"authFormIcon\"}\n                icon={show ? <BiShow /> : <BiHide />}\n                onClick={handleClick}\n              />\n            </InputRightElement>\n          </InputGroup>\n          <FormErrorMessage position=\"absolute\" bottom=\"-20px\">\n            {errors.password?.message}\n          </FormErrorMessage>\n        </FormControl>\n\n        <Button\n          // height={{ base: \"44px\", lg: \"48px\" }}\n          type=\"submit\"\n          isLoading={isLoading}\n          variant={\"LoginBtn\"}\n        >\n          Login\n        </Button>\n      </Stack>\n\n      <Box\n        mx={\"auto\"}\n        mt={\"40px\"}\n        fontSize={\"12px\"}\n        lineHeight={\"16px\"}\n        display={\"flex\"}\n        gap={\"5px\"}\n        color={\"black\"}\n      >\n        Do not have an account?\n        <Link as={NavLink} to={\"/register\"} display={\"flex\"}>\n          <Text color=\"#3091EB\">Register</Text>\n        </Link>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from \"../../componets/auth/LoginForm\";\nimport { Flex } from \"@chakra-ui/react\";\n\nconst Login = () => {\n  return (\n    <Flex justifyContent={\"center\"} pt={\"100px\"}>\n      <LoginForm />\n    </Flex>\n  );\n};\n\nexport default Login;\n"],"names":["toast","useToast","addToast","_ref","type","message","description","status","duration","position","isClosable","color","schema","yup","shape","email","trim","min","max","required","password","_errors$email","_errors$password","_useState","useState","_useState2","_slicedToArray","show","setShow","dispatch","useDispatch","_useLoginUserMutation","useLoginUserMutation","_useLoginUserMutation2","loginUser","isLoading","navigate","useNavigate","Toast","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","reset","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","_yield$loginUser","res","error","wrap","_context","prev","next","sent","abrupt","login","t0","console","log","stop","_x","apply","arguments","_jsxs","Flex","maxW","width","bg","boxShadow","borderRadius","padding","flexDirection","children","_jsx","Heading","variant","mx","mb","Stack","gap","w","as","FormControl","isInvalid","Input","_objectSpread","placeholder","FormErrorMessage","bottom","InputGroup","InputRightElement","IconButton","icon","BiShow","BiHide","onClick","Button","Box","mt","fontSize","lineHeight","display","Link","NavLink","to","Text","justifyContent","pt","LoginForm"],"sourceRoot":""}